{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Babs\\\\Downloads\\\\Slurm WorkLoad Manager\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Fade, Form, NavItem } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport useInputState from \"./hooks/useInputState\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nvar checkMan;\nconst EmailTypes = [\"BEGIN\", \"END\", \"FAIL\", \"REQUEUE\"];\nconst cluster = [{\n  value: \"CARYA\",\n  label: \"CARYA\"\n}, {\n  value: \"OPUNTIA\",\n  label: \"OPUNTIA\"\n}, {\n  value: \"SABINE\",\n  label: \"SABINE\"\n}];\nconst optionNodes = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}];\nconst optionGPU = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}];\nconst optionGPUcarya = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}];\nconst optionCoresCarya = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}, {\n  value: \"14\",\n  label: \"14\"\n}, {\n  value: \"15\",\n  label: \"15\"\n}, {\n  value: \"16\",\n  label: \"16\"\n}, {\n  value: \"17\",\n  label: \"17\"\n}, {\n  value: \"18\",\n  label: \"18\"\n}, {\n  value: \"19\",\n  label: \"19\"\n}, {\n  value: \"20\",\n  label: \"20\"\n}, {\n  value: \"21\",\n  label: \"21\"\n}, {\n  value: \"22\",\n  label: \"22\"\n}, {\n  value: \"23\",\n  label: \"23\"\n}, {\n  value: \"24\",\n  label: \"24\"\n}, {\n  value: \"25\",\n  label: \"25\"\n}, {\n  value: \"26\",\n  label: \"26\"\n}, {\n  value: \"27\",\n  label: \"27\"\n}, {\n  value: \"28\",\n  label: \"28\"\n}, {\n  value: \"29\",\n  label: \"29\"\n}, {\n  value: \"30\",\n  label: \"30\"\n}, {\n  value: \"31\",\n  label: \"31\"\n}, {\n  value: \"32\",\n  label: \"32\"\n}, {\n  value: \"33\",\n  label: \"33\"\n}, {\n  value: \"34\",\n  label: \"34\"\n}, {\n  value: \"35\",\n  label: \"35\"\n}, {\n  value: \"36\",\n  label: \"36\"\n}, {\n  value: \"37\",\n  label: \"37\"\n}, {\n  value: \"38\",\n  label: \"38\"\n}, {\n  value: \"39\",\n  label: \"39\"\n}, {\n  value: \"40\",\n  label: \"40\"\n}, {\n  value: \"41\",\n  label: \"41\"\n}, {\n  value: \"42\",\n  label: \"42\"\n}, {\n  value: \"43\",\n  label: \"43\"\n}, {\n  value: \"44\",\n  label: \"44\"\n}, {\n  value: \"45\",\n  label: \"45\"\n}, {\n  value: \"46\",\n  label: \"46\"\n}, {\n  value: \"47\",\n  label: \"47\"\n}, {\n  value: \"48\",\n  label: \"48\"\n}];\nconst optionCoresSabine = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}, {\n  value: \"14\",\n  label: \"14\"\n}, {\n  value: \"15\",\n  label: \"15\"\n}, {\n  value: \"16\",\n  label: \"16\"\n}, {\n  value: \"17\",\n  label: \"17\"\n}, {\n  value: \"18\",\n  label: \"18\"\n}, {\n  value: \"19\",\n  label: \"19\"\n}, {\n  value: \"20\",\n  label: \"20\"\n}, {\n  value: \"21\",\n  label: \"21\"\n}, {\n  value: \"22\",\n  label: \"22\"\n}, {\n  value: \"23\",\n  label: \"23\"\n}, {\n  value: \"24\",\n  label: \"24\"\n}, {\n  value: \"25\",\n  label: \"25\"\n}, {\n  value: \"26\",\n  label: \"26\"\n}, {\n  value: \"27\",\n  label: \"27\"\n}, {\n  value: \"28\",\n  label: \"28\"\n}, {\n  value: \"29\",\n  label: \"29\"\n}, {\n  value: \"30\",\n  label: \"30\"\n}, {\n  value: \"31\",\n  label: \"31\"\n}, {\n  value: \"32\",\n  label: \"32\"\n}, {\n  value: \"33\",\n  label: \"33\"\n}, {\n  value: \"34\",\n  label: \"34\"\n}, {\n  value: \"35\",\n  label: \"35\"\n}, {\n  value: \"36\",\n  label: \"36\"\n}, {\n  value: \"37\",\n  label: \"37\"\n}, {\n  value: \"38\",\n  label: \"38\"\n}, {\n  value: \"39\",\n  label: \"39\"\n}, {\n  value: \"40\",\n  label: \"40\"\n}];\nconst optionCoresOpuntia = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}, {\n  value: \"14\",\n  label: \"14\"\n}, {\n  value: \"15\",\n  label: \"15\"\n}, {\n  value: \"16\",\n  label: \"16\"\n}, {\n  value: \"17\",\n  label: \"17\"\n}, {\n  value: \"18\",\n  label: \"18\"\n}, {\n  value: \"19\",\n  label: \"19\"\n}, {\n  value: \"20\",\n  label: \"20\"\n}];\nconst minSecSet = [{\n  value: \"0\",\n  label: \"0\"\n}, {\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}, {\n  value: \"14\",\n  label: \"14\"\n}, {\n  value: \"15\",\n  label: \"15\"\n}, {\n  value: \"16\",\n  label: \"16\"\n}, {\n  value: \"17\",\n  label: \"17\"\n}, {\n  value: \"18\",\n  label: \"18\"\n}, {\n  value: \"19\",\n  label: \"19\"\n}, {\n  value: \"20\",\n  label: \"20\"\n}, {\n  value: \"21\",\n  label: \"21\"\n}, {\n  value: \"22\",\n  label: \"22\"\n}, {\n  value: \"23\",\n  label: \"23\"\n}, {\n  value: \"24\",\n  label: \"24\"\n}, {\n  value: \"25\",\n  label: \"25\"\n}, {\n  value: \"26\",\n  label: \"26\"\n}, {\n  value: \"27\",\n  label: \"27\"\n}, {\n  value: \"28\",\n  label: \"28\"\n}, {\n  value: \"29\",\n  label: \"29\"\n}, {\n  value: \"30\",\n  label: \"30\"\n}, {\n  value: \"31\",\n  label: \"31\"\n}, {\n  value: \"32\",\n  label: \"32\"\n}, {\n  value: \"33\",\n  label: \"33\"\n}, {\n  value: \"34\",\n  label: \"34\"\n}, {\n  value: \"35\",\n  label: \"35\"\n}, {\n  value: \"36\",\n  label: \"36\"\n}, {\n  value: \"37\",\n  label: \"37\"\n}, {\n  value: \"38\",\n  label: \"38\"\n}, {\n  value: \"39\",\n  label: \"39\"\n}, {\n  value: \"40\",\n  label: \"40\"\n}, {\n  value: \"41\",\n  label: \"41\"\n}, {\n  value: \"42\",\n  label: \"42\"\n}, {\n  value: \"43\",\n  label: \"43\"\n}, {\n  value: \"44\",\n  label: \"44\"\n}, {\n  value: \"45\",\n  label: \"45\"\n}, {\n  value: \"46\",\n  label: \"46\"\n}, {\n  value: \"47\",\n  label: \"47\"\n}, {\n  value: \"48\",\n  label: \"48\"\n}, {\n  value: \"49\",\n  label: \"49\"\n}, {\n  value: \"50\",\n  label: \"50\"\n}, {\n  value: \"51\",\n  label: \"51\"\n}, {\n  value: \"52\",\n  label: \"52\"\n}, {\n  value: \"53\",\n  label: \"53\"\n}, {\n  value: \"54\",\n  label: \"54\"\n}, {\n  value: \"55\",\n  label: \"55\"\n}, {\n  value: \"56\",\n  label: \"56\"\n}, {\n  value: \"57\",\n  label: \"57\"\n}, {\n  value: \"58\",\n  label: \"58\"\n}, {\n  value: \"59\",\n  label: \"59\"\n}];\nconst hourSet = [{\n  value: \"0\",\n  label: \"0\"\n}, {\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}, {\n  value: \"14\",\n  label: \"14\"\n}, {\n  value: \"15\",\n  label: \"15\"\n}, {\n  value: \"16\",\n  label: \"16\"\n}, {\n  value: \"17\",\n  label: \"17\"\n}, {\n  value: \"18\",\n  label: \"18\"\n}, {\n  value: \"19\",\n  label: \"19\"\n}, {\n  value: \"20\",\n  label: \"20\"\n}, {\n  value: \"21\",\n  label: \"21\"\n}, {\n  value: \"22\",\n  label: \"22\"\n}, {\n  value: \"23\",\n  label: \"23\"\n}];\nconst daySet = [{\n  value: \"0\",\n  label: \"0\"\n}, {\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}, {\n  value: \"9\",\n  label: \"9\"\n}, {\n  value: \"10\",\n  label: \"10\"\n}, {\n  value: \"11\",\n  label: \"11\"\n}, {\n  value: \"12\",\n  label: \"12\"\n}, {\n  value: \"13\",\n  label: \"13\"\n}];\nconst optionGPUsc = [{\n  value: \"1\",\n  label: \"1\"\n}, {\n  value: \"2\",\n  label: \"2\"\n}, {\n  value: \"3\",\n  label: \"3\"\n}, {\n  value: \"4\",\n  label: \"4\"\n}, {\n  value: \"5\",\n  label: \"5\"\n}, {\n  value: \"6\",\n  label: \"6\"\n}, {\n  value: \"7\",\n  label: \"7\"\n}, {\n  value: \"8\",\n  label: \"8\"\n}];\nconst memoryOptions = [{\n  value: \"1GB\",\n  label: \"1GB\"\n}, {\n  value: \"2GB\",\n  label: \"2GB\"\n}, {\n  value: \"4GB\",\n  label: \"4GB\"\n}, {\n  value: \"8GB\",\n  label: \"8GB\"\n}, {\n  value: \"16GB\",\n  label: \"16GB\"\n}, {\n  value: \"32GB\",\n  label: \"32GB\"\n}];\nconst memoryOptions2 = [{\n  value: \"1GB\",\n  label: \"1GB\"\n}, {\n  value: \"2GB\",\n  label: \"2GB\"\n}, {\n  value: \"4GB\",\n  label: \"4GB\"\n}, {\n  value: \"8GB\",\n  label: \"8GB\"\n}, {\n  value: \"16GB\",\n  label: \"16GB\"\n}, {\n  value: \"32GB\",\n  label: \"32GB\"\n}, {\n  value: \"64GB\",\n  label: \"64GB\"\n}];\nconst moduleListSabine = [{\n  value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  label: \"GROMACS/2018-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  label: \"GROMACS/2016-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  label: \"GROMACS/2018-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\"\n}, {\n  value: \"GROMACS/2018.3-intel-2017b\",\n  label: \"GROMACS/2018.3-intel-2017b\"\n}, {\n  value: \"GROMACS/2018.3-intelcuda-2017b\",\n  label: \"GROMACS/2018.3-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\"\n}, {\n  value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\"\n}, {\n  value: \"GROMACS/2018.8-intelcuda-2017b\",\n  label: \"GROMACS/2018.8-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2019.6-intelcuda-2017b\",\n  label: \"GROMACS/2019.6-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  label: \"GROMACS/2020-intel-2019-GPU-enabled\"\n}, {\n  value: \"R/3.4.0-iomkl-2017b-bare\",\n  label: \"R/3.4.0-iomkl-2017b-bare\"\n}, {\n  value: \"R/3.4.1/gcc\",\n  label: \"R/3.4.1/gcc\"\n}, {\n  value: \"R/3.5.1-intel-2017b-X11-20171023\",\n  label: \"R/3.5.1-intel-2017b-X11-20171023\"\n}, {\n  value: \"R/3.5.1-intel-2018b\",\n  label: \"R/3.5.1-intel-2018b\"\n}, {\n  value: \"R/3.6.1-intel-2018b\",\n  label: \"R/3.6.1-intel-2018b\"\n}, {\n  value: \"python/2.7\",\n  label: \"python/2.7\"\n}, {\n  value: \"python/3.5\",\n  label: \"python/3.5\"\n}, {\n  value: \"python/3.6\",\n  label: \"python/3.6\"\n}, {\n  value: \"python/3.7\",\n  label: \"python/3.7\"\n}, {\n  value: \"matlab/r2017b\",\n  label: \"matlab/r2017b\"\n}, {\n  value: \"matlab/r2018a\",\n  label: \"matlab/r2018a\"\n}, {\n  value: \"matlab/r2018b \",\n  label: \"matlab/r2018b \"\n}, {\n  value: \"matlab/r2019a\",\n  label: \"matlab/r2019a\"\n}, {\n  value: \"matlab/r2019b\",\n  label: \"matlab/r2019b\"\n}, {\n  value: \"matlab/r2020a\",\n  label: \"matlab/r2020a\"\n}, {\n  value: \"matlab/r2020b\",\n  label: \"matlab/r2020b\"\n}];\nconst moduleListCarya = [{\n  value: \"matlab/r2020a\",\n  label: \"matlab/r2020a\"\n}, {\n  value: \"matlab/r2020b\",\n  label: \"matlab/r2020b\"\n}, {\n  value: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\",\n  label: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\"\n}, {\n  value: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\",\n  label: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\"\n}, {\n  value: \"GROMACS/2020.4-intelcuda-2019b\",\n  label: \"GROMACS/2020.4-intelcuda-2019b\"\n}, {\n  value: \"R/4.0.2-intel-2019b\",\n  label: \"R/4.0.2-intel-2019b\"\n}, {\n  value: \"python/3.7\",\n  label: \"python/3.7\"\n}];\nconst moduleListOpuntia = [{\n  value: \"matlab/r2017b\",\n  label: \"matlab/r2017b\"\n}, {\n  value: \"matlab/r2020b\",\n  label: \"matlab/r2020b\"\n}, {\n  value: \"matlab/r2018a\",\n  label: \"matlab/r2018a\"\n}, {\n  value: \"matlab/r2018b\",\n  label: \"matlab/r2018b\"\n}, {\n  value: \"matlab/r2019a\",\n  label: \"matlab/r2019a\"\n}, {\n  value: \"matlab/r2019b\",\n  label: \"matlab/r2019b\"\n}, {\n  value: \"matlab/r2020a\",\n  label: \"matlab/r2020a\"\n}, {\n  value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  label: \"GROMACS/2016-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  label: \"GROMACS/2018-intel-2018-GPU-enabled\"\n}, {\n  value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\"\n}, {\n  value: \"GROMACS/2018.3-intel-2017b\",\n  label: \"GROMACS/2018.3-intel-2017b\"\n}, {\n  value: \"GROMACS/2018.3-intelcuda-2017b\",\n  label: \"GROMACS/2018.3-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\"\n}, {\n  value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\"\n}, {\n  value: \"GROMACS/2018.8-intelcuda-2017b\",\n  label: \"GROMACS/2018.8-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2019.6-intelcuda-2017b\",\n  label: \"GROMACS/2019.6-intelcuda-2017b\"\n}, {\n  value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  label: \"GROMACS/2020-intel-2019-GPU-enabled\"\n}, {\n  value: \"R/3.4.0-iomkl-2017b-bare\",\n  label: \"R/3.4.0-iomkl-2017b-bare\"\n}, {\n  value: \"R/3.4.1/gcc\",\n  label: \"R/3.4.1/gcc\"\n}, {\n  value: \"R/3.5.1-intel-2017b-X11-20171023\",\n  label: \"R/3.5.1-intel-2017b-X11-20171023\"\n}, {\n  value: \"R/3.5.1-intel-2018b\",\n  label: \"R/3.5.1-intel-2018b\"\n}, {\n  value: \"R/3.6.1-intel-2018b\",\n  label: \"R/3.6.1-intel-2018b\"\n}, {\n  value: \"python/2.7\",\n  label: \"python/2.7\"\n}, {\n  value: \"python/3.5\",\n  label: \"python/3.5\"\n}, {\n  value: \"python/3.6\",\n  label: \"python/3.6\"\n}, {\n  value: \"python/3.7\",\n  label: \"python/3.7\"\n}];\nconst moduleListDef = [{\n  value: \"ERROR\",\n  label: \"ERROR\"\n}];\nvar gpuText;\n\nfunction App() {\n  _s();\n\n  const [jobTitle, SetJobTitle] = useState(\"\");\n  const [executableCall, handleExecutableCall] = useState(\"\");\n  const [emailAddr, SethandleEmailAddr] = useState(\"\");\n  const [allEmail, setAllEmail] = useState(false);\n  const [emailNotification, setEmailNotification] = useState(\"\");\n  const [numberOfNode, setNumberOfNode] = useState(\"\");\n  const [numberOfMemory, setNumberOfMemory] = useState(\"\");\n  const [moduleValues, setModuleValues] = useState(null);\n  const [numberOfCore, setNumberOfCore] = useState(\"\");\n  const [clusterType, setClusterType] = useState(\"\");\n  const [GPUNumber, setGPUNumber] = useState(\"\");\n  const [adjustGPU, setAdjustGPU] = useState(false);\n  const [adjustRunTime, setAdjustRunTime] = useState(false);\n  const [days, setDays] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [minute, setMin] = useState(\"\");\n  const [second, setSec] = useState(\"\");\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorCluster, setErrorCluster] = useState(false);\n  const [errorModules, setErrorModules] = useState(false);\n  const [errorExecutable, setErrorExecutable] = useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n  useEffect(() => {}, [errorEmail, errorTitle, errorCluster, errorModules, errorExecutable]);\n\n  function chBackcolor() {\n    var f = document.getElementById('scripter');\n    var h = document.getElementById('scriptT');\n    setTimeout(function () {\n      h.style.color = f.style.color == \"#000000\" ? '' : \"#000000\";\n      f.style.background = f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\";\n    }, 600);\n    setTimeout(function () {\n      h.style.color = f.style.color == \"#000000\" ? '' : \"#000000\";\n      f.style.background = f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\";\n    }, 1200);\n    h.style.color = \"#c8102e\";\n    f.style.background = \"#d8cd9b\";\n  }\n\n  const handleJob = e => {\n    setErrorTitle(false);\n    SetJobTitle(e.target.value);\n  };\n\n  const handleEmailAddr = e => {\n    setErrorEmail(false);\n    SethandleEmailAddr(e.target.value);\n  };\n\n  var email;\n\n  const renderEmailType = () => {\n    email = \"NONE\";\n    let emailType = null;\n\n    if (emailNotification.length === 0 && allEmail === false) {\n      if (emailAddr !== \"\") {\n        emailType = `#SBATCH --mail-type=${email}`;\n      } else {\n        email = \"NONE\";\n        emailType = `#SBATCH --mail-type=${email}`;\n      }\n    } else if (emailNotification.length === 4) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else if (allEmail === true) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else {\n      email = emailNotification.join(\",\");\n      emailType = `#SBATCH --mail-type=${email}`;\n    }\n\n    return emailType;\n  };\n\n  const renderGPU = () => {\n    if (adjustGPU) {\n      gpuText = `#SBATCH --gpus-per-node=${GPUNumber}`;\n    } else {\n      gpuText = \"\";\n    }\n\n    return gpuText;\n  };\n\n  const renderCoreNode = () => {\n    let ncText = null;\n\n    if (numberOfCore || numberOfNode) {\n      ncText = `#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}`;\n    } else {\n      ncText = \"\";\n    }\n\n    return ncText;\n  };\n\n  const renderTime = () => {\n    let timeText = null;\n\n    if (days || hour || minute || second) {\n      timeText = `#SBATCH -t ${days * 24 + hour * 1}:${minute}:${second}`;\n    } else {\n      timeText = \"\";\n    }\n\n    return timeText;\n  };\n\n  const renderMem = () => {\n    let memText = null;\n\n    if (numberOfMemory) {\n      memText = `#SBATCH --mem-per-cpu=${numberOfMemory}`;\n    } else {\n      memText = \"\";\n    }\n\n    return memText;\n  };\n\n  const getModules = () => {\n    return moduleValues === null || moduleValues === void 0 ? void 0 : moduleValues.map(m => {\n      return `module load ${m.value}\\n`;\n    });\n  };\n\n  var codeCopy = `#!/bin/bash\\n#SBATCH -J ${jobTitle}\\n#SBATCH -o ${jobTitle}.o%j\\n#SBATCH --mail-user=${emailAddr}\\n${renderEmailType()}\\n#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}\\n#SBATCH -t ${days * 24 + hour * 1}:${minute}:${second}\\n${renderGPU()}\\n#SBATCH --mem-per-cpu=${numberOfMemory}\\n${getModules()}\\n${executableCall}`;\n  codeCopy = codeCopy.replaceAll(\",m\", \"m\");\n  var alertMsg;\n  var timeWarn = \"\";\n  var emailWarn = \"\";\n  var jobWarn = \"\";\n  var modWarn = \"\";\n  var clustWarn = \"\";\n  var execWarn = \"\";\n  var etypeWarn = \"\";\n\n  const emailBox = () => {\n    var emailChecker = document.querySelectorAll(\".email-checks\");\n    let array = [];\n    emailChecker.forEach(element => {\n      array.push(element.childNodes[0].checked);\n    });\n    let ans = array.find(e => e === true);\n\n    if (!ans) {\n      document.getElementById(\"email-checks-all\").checked = true;\n      setAllEmail(true);\n    }\n  };\n\n  const Validate = () => {\n    //Regex for Valid Characters i.e. Alphabets, Numbers and Space.\n    var regex = /^[A-Za-z0-9]+$/; //Validate TextBox value against the Regex.\n\n    var isValid = regex.test(document.getElementById(\"jobTitle\").value);\n\n    if (!isValid && document.getElementById(\"jobTitle\").pattern != \"[^s]*\") {\n      jobWarn = \"Error found in Job Title\\n\";\n      setErrorTitle(true);\n      alertMsg = true;\n      isValid = false;\n    } else {\n      isValid = true;\n      alertMsg = false;\n\n      if (document.getElementById(\"executableCall\").value === \" \") {\n        console.log(\"great\");\n        alertMsg = true;\n      }\n\n      return isValid;\n    }\n  };\n\n  function validateEmail() {\n    var emailID = document.getElementById(\"emailAddress\").value;\n    var atpos = emailID.indexOf(\"@\");\n    var dotpos = emailID.lastIndexOf(\".\");\n\n    if (atpos < 1 || dotpos - atpos < 2) {\n      alertMsg = true;\n      emailWarn = \"Email field is incorrect or empty\\n\";\n      setErrorEmail(true);\n    }\n\n    if (email == \"NONE\") {\n      etypeWarn = \"Select Email Notification Type\\n\";\n      alertMsg = true;\n    }\n\n    if (!clusterType) {\n      console.log(clusterType);\n      setErrorCluster(true);\n      clustWarn = \"Cluster not selected!\\n\";\n      alertMsg = true;\n    } else {\n      if (moduleValues == null || moduleValues == '') {\n        setErrorModules(true);\n        modWarn = \"No modules selected!\\n\";\n        alertMsg = true;\n      }\n\n      let call = document.getElementById(\"executableCall\").value;\n\n      if (!call) {\n        setErrorExecutable(true);\n        execWarn = \"Error in Executable Call field\\n\";\n        alertMsg = true;\n      }\n\n      if (days + hour + minute + second == 0) {\n        alertMsg = true;\n        timeWarn = \"Time field must not total zero\\n\";\n      }\n    }\n\n    if (alertMsg === true) {\n      alert(jobWarn + emailWarn + etypeWarn + clustWarn + modWarn + execWarn + timeWarn);\n      copyToClipboard(\"Error found, please return to generator\");\n    } else {\n      alert(\"Copied\");\n    }\n\n    return true;\n  }\n\n  function copyToClipboard(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData(\"Text\", text);\n    } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n      var textarea = document.createElement(\"textarea\");\n      textarea.textContent = text;\n      textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n\n      document.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        console.warn(\"Copy to clipboard failed.\", ex);\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Single Core and MPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"modules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 16\n          }, this), \" utility sets up your environment paths for particular versions of specified programs. It is possible to use more than one module in your job (just list all the ones you need on separate lines).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"For example to use version \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"3.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 39\n          }, this), \" of the application \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"foo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 75\n          }, this), \", which was compiled with \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"gcc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 117\n          }, this), \" version 4.9.2, you should load the module called: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"foo/3.2-gcc-4.9.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 184\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You can list all available modules using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"module avail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 66\n          }, this), \" command.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"script-title\",\n      style: {\n        marginTop: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SLURM WORKLOAD MANAGER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"script-titleGen\",\n      style: {\n        marginTop: \"-22px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SCRIPT GENERATOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: jobTitle,\n              className: `${errorTitle ? \"borderColor\" : \"borderRemove\"}`,\n              onChange: handleJob,\n              type: \"text\",\n              placeholder: \"my_mpi_job\",\n              id: \"jobTitle\",\n              pattern: \"[^\\\\s]*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Create a name for your job (DO NOT USE SPACE OR SPECIAL CHARACTERS)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"emailAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: emailAddr,\n              className: `${errorEmail ? \"borderColor\" : \"borderRemove\"}`,\n              onChange: handleEmailAddr,\n              type: \"email\",\n              placeholder: \"username@uh.edu\",\n              id: \"emailAddress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter your email address(e.g cougar123@uh.edu)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"emailNotification\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-check\",\n              style: {\n                fontSize: \"11px\"\n              },\n              children: [EmailTypes.map((type, index) => {\n                const label = type.toLocaleLowerCase();\n                return /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  className: \"email-checks\" // checked={emailNotification.includes(type)}\n                  ,\n                  default: 1,\n                  disabled: allEmail === true,\n                  onChange: () => {\n                    if (emailNotification.includes(type)) {\n                      const emails = emailNotification.filter(removeType => removeType !== type);\n                      setEmailNotification(emails);\n                      return;\n                    }\n\n                    setEmailNotification([...emailNotification, type]);\n                  },\n                  label: `On Job ${label.charAt(0).toUpperCase() + label.slice(1)}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Form.Check, {\n                checked: allEmail,\n                id: \"email-checks-all\",\n                onChange: () => setAllEmail(!allEmail),\n                type: \"checkbox\",\n                label: \"ALL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Please select the type of email notifications about your job, you would like to receive.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"clusterType\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Cluster Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: `${errorCluster ? \"borderColorCluster\" : \"borderRemove\"}`,\n              onChange: e => {\n                setErrorCluster(false);\n                setClusterType(e.value);\n                setAdjustGPU(!adjustGPU);\n                setGPUNumber(\"1\");\n                {\n                  gpuText = \"\";\n                }\n                handleExecutableCall(\"\");\n                setModuleValues(null);\n                setDays(\"0\");\n                setHour(\"4\");\n                setMin(\"0\");\n                setSec(\"0\");\n                setAdjustRunTime(false);\n                setNumberOfCore(\"1\");\n                setNumberOfNode(\"1\");\n                setNumberOfMemory(\"1GB\");\n                setAdjustGPU(false);\n                chBackcolor(\"#7e6f30\");\n              },\n              options: cluster,\n              moduleValues: (\"\", 0),\n              id: \"clusterType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Select cluster of choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Number of Nodes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: {\n                value: numberOfNode,\n                label: numberOfNode\n              },\n              onChange: e => setNumberOfNode(e.value),\n              options: optionNodes,\n              isDisabled: clusterType === \"\",\n              id: \"numberOfNode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Select the number of compute nodes your job will run on.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"numberOfCore\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Number of Cores Per Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: {\n                value: numberOfCore,\n                label: numberOfCore\n              },\n              onChange: e => setNumberOfCore(e.value),\n              isDisabled: clusterType === \"\",\n              id: \"numberOfCore\",\n              options: (() => {\n                switch (clusterType) {\n                  case \"SABINE\":\n                    return optionCoresSabine;\n\n                  case \"CARYA\":\n                    return optionCoresCarya;\n\n                  case \"OPUNTIA\":\n                    return optionCoresOpuntia;\n\n                  default:\n                    return moduleListDef;\n                }\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Select the number of processor cores per node your job will run on. Total number of cores requested will be the product of the number of nodes and this value.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Job Runtime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row-container\",\n              style: {\n                width: \"700px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-container\",\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  value: {\n                    value: days,\n                    label: days\n                  },\n                  onChange: e => {\n                    setDays(e.value);\n                  },\n                  options: daySet,\n                  isDisabled: !adjustRunTime,\n                  type: \"text\",\n                  placeholder: \"days\",\n                  id: \"days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"days\",\n                  children: \"Days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-container\",\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  value: {\n                    value: hour,\n                    label: hour\n                  },\n                  onChange: e => {\n                    setHour(e.value);\n                  },\n                  options: hourSet,\n                  isDisabled: !adjustRunTime,\n                  type: \"text\",\n                  placeholder: \"hours\",\n                  id: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"days\",\n                  children: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 937,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-container\",\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  value: {\n                    value: minute,\n                    label: minute\n                  },\n                  onChange: e => {\n                    setMin(e.value);\n                  },\n                  options: minSecSet,\n                  isDisabled: !adjustRunTime,\n                  type: \"text\",\n                  placeholder: \"minutes\",\n                  id: \"minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"days\",\n                  children: \"min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-container\",\n                style: {\n                  width: \"300px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  value: {\n                    value: second,\n                    label: second\n                  },\n                  onChange: e => {\n                    setSec(e.value);\n                  },\n                  options: minSecSet,\n                  isDisabled: !adjustRunTime,\n                  type: \"text\",\n                  placeholder: \"seconds\",\n                  id: \"seconds\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"days\",\n                  children: \"sec\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              checked: adjustRunTime,\n              onChange: () => setAdjustRunTime(!adjustRunTime),\n              type: \"checkbox\",\n              label: \"Manually Adjust Runtime\",\n              disabled: clusterType === \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"This sets the amount of run time you are requesting to be allocated for your job. The default job time is displayed. If you want to adjust this manually, just click the checkbox next to 'Manually Adjust Runtime' and this will allow you to adjust the controls.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"numberOfMemory\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Memory Size for Cores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: {\n                value: numberOfMemory,\n                label: numberOfMemory\n              },\n              onChange: e => setNumberOfMemory(e.value),\n              options: (() => {\n                switch (clusterType) {\n                  case \"SABINE\":\n                    return memoryOptions;\n\n                  case \"CARYA\":\n                    return memoryOptions2;\n\n                  case \"OPUNTIA\":\n                    return memoryOptions;\n\n                  default:\n                    return memoryOptions;\n                }\n              })(),\n              isDisabled: clusterType === \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"This sets the amount of memory you want to allocate to each core for your job. If you leave this in blank, your job will run with the default memory per core.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"checkGPU\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"GPUs per node:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              style: {\n                marginBottom: \"10px\"\n              },\n              type: \"checkbox\",\n              checked: adjustGPU,\n              disabled: clusterType === \"\",\n              onChange: () => {\n                setAdjustGPU(!adjustGPU);\n              },\n              label: \"Select for GPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: {\n                value: GPUNumber,\n                label: GPUNumber\n              },\n              onChange: e => {\n                setGPUNumber(e.value);\n              },\n              options: (() => {\n                switch (clusterType) {\n                  case \"SABINE\":\n                    return optionGPUcarya;\n\n                  case \"CARYA\":\n                    return optionGPUcarya;\n\n                  case \"OPUNTIA\":\n                    return optionGPU;\n\n                  default:\n                    return moduleListDef;\n                }\n              })(),\n              isDisabled: !adjustGPU,\n              placeholder: \"select GPU value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"moduleSelect\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Modules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: `${errorModules ? \"borderColorModules\" : \"borderRemove\"}`,\n              isMulti: true,\n              value: moduleValues,\n              onChange: value => (setModuleValues(value), setErrorModules(false)),\n              options: (() => {\n                switch (clusterType) {\n                  case \"SABINE\":\n                    return moduleListSabine;\n\n                  case \"CARYA\":\n                    return moduleListCarya;\n\n                  case \"OPUNTIA\":\n                    return moduleListOpuntia;\n\n                  default:\n                    return moduleListDef;\n                }\n              })(),\n              isDisabled: clusterType === \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: [\"List of modules to load for your job, one per line\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"href\",\n                className: \"btnLink\",\n                onClick: () => setModalShow(true),\n                children: \"(more...)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n                show: modalShow,\n                onHide: () => setModalShow(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            style: {\n              marginBottom: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Executable Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: `${errorExecutable ? \"borderColorExecutable\" : \"borderRemove\"}`,\n              value: executableCall,\n              onChange: e => (handleExecutableCall(e.target.value), setErrorExecutable(false)),\n              type: \"text\",\n              placeholder: \"python example.py\",\n              disabled: clusterType === \"\",\n              id: \"executableCall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter the program or complete command line statement you wish to run for your job. If you pipe input or pass argument, include those as well.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scriptT\",\n          className: \"slurm-title\",\n          style: {\n            marginTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Cluster Name:  ${clusterType}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"scripter\",\n          className: \"script-code\",\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"#!/bin/bash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `#SBATCH -J ${jobTitle}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `#SBATCH -o ${jobTitle}.o%j`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `#SBATCH --mail-user=${emailAddr}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: renderEmailType()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: renderCoreNode()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: renderTime()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: renderGPU()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: renderMem()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: moduleValues && moduleValues.map((m, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `module load ${m.value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: executableCall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"clickBtn\",\n              onClick: () => {\n                if (Validate()) {\n                  copyToClipboard(codeCopy);\n                }\n\n                validateEmail();\n              },\n              children: \"Copy Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: \"10px\"\n            },\n            children: \"To use this script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-script\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"1. Copy and paste this script into a new file in your job or project directory on the cluster, using an editor like nano or vi.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"2. Submit your job::\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 748,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6TOrPy80YUH6CuFbWNDA8BG2AMQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Babs/Downloads/Slurm WorkLoad Manager/src/App.js"],"names":["useState","useEffect","Fade","Form","NavItem","Select","useInputState","React","Button","Modal","checkMan","EmailTypes","cluster","value","label","optionNodes","optionGPU","optionGPUcarya","optionCoresCarya","optionCoresSabine","optionCoresOpuntia","minSecSet","hourSet","daySet","optionGPUsc","memoryOptions","memoryOptions2","moduleListSabine","moduleListCarya","moduleListOpuntia","moduleListDef","gpuText","App","jobTitle","SetJobTitle","executableCall","handleExecutableCall","emailAddr","SethandleEmailAddr","allEmail","setAllEmail","emailNotification","setEmailNotification","numberOfNode","setNumberOfNode","numberOfMemory","setNumberOfMemory","moduleValues","setModuleValues","numberOfCore","setNumberOfCore","clusterType","setClusterType","GPUNumber","setGPUNumber","adjustGPU","setAdjustGPU","adjustRunTime","setAdjustRunTime","days","setDays","hour","setHour","minute","setMin","second","setSec","errorTitle","setErrorTitle","errorEmail","setErrorEmail","errorCluster","setErrorCluster","errorModules","setErrorModules","errorExecutable","setErrorExecutable","modalShow","setModalShow","chBackcolor","f","document","getElementById","h","setTimeout","style","color","background","handleJob","e","target","handleEmailAddr","email","renderEmailType","emailType","length","join","renderGPU","renderCoreNode","ncText","renderTime","timeText","renderMem","memText","getModules","map","m","codeCopy","replaceAll","alertMsg","timeWarn","emailWarn","jobWarn","modWarn","clustWarn","execWarn","etypeWarn","emailBox","emailChecker","querySelectorAll","array","forEach","element","push","childNodes","checked","ans","find","Validate","regex","isValid","test","pattern","console","log","validateEmail","emailID","atpos","indexOf","dotpos","lastIndexOf","call","alert","copyToClipboard","text","window","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","position","body","appendChild","select","execCommand","ex","warn","removeChild","MyVerticallyCenteredModal","props","onHide","marginTop","marginBottom","fontSize","type","index","toLocaleLowerCase","includes","emails","filter","removeType","charAt","toUpperCase","slice","width"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Fade, Form, NavItem } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport useInputState from \"./hooks/useInputState\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal} from 'react-bootstrap';\n\nvar checkMan;\nconst EmailTypes = [\"BEGIN\", \"END\", \"FAIL\", \"REQUEUE\"];\n\n\nconst cluster = [\n  { value: \"CARYA\", label: \"CARYA\" },\n  { value: \"OPUNTIA\", label: \"OPUNTIA\" },\n  { value: \"SABINE\", label: \"SABINE\" },\n];\n\nconst optionNodes = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst optionGPU = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n];\n\nconst optionGPUcarya = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst optionCoresCarya = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n  { value: \"41\", label: \"41\" },\n  { value: \"42\", label: \"42\" },\n  { value: \"43\", label: \"43\" },\n  { value: \"44\", label: \"44\" },\n  { value: \"45\", label: \"45\" },\n  { value: \"46\", label: \"46\" },\n  { value: \"47\", label: \"47\" },\n  { value: \"48\", label: \"48\" },\n];\n\nconst optionCoresSabine = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n];\n\nconst optionCoresOpuntia = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n];\n\nconst minSecSet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n  { value: \"41\", label: \"41\" },\n  { value: \"42\", label: \"42\" },\n  { value: \"43\", label: \"43\" },\n  { value: \"44\", label: \"44\" },\n  { value: \"45\", label: \"45\" },\n  { value: \"46\", label: \"46\" },\n  { value: \"47\", label: \"47\" },\n  { value: \"48\", label: \"48\" },\n  { value: \"49\", label: \"49\" },\n  { value: \"50\", label: \"50\" },\n  { value: \"51\", label: \"51\" },\n  { value: \"52\", label: \"52\" },\n  { value: \"53\", label: \"53\" },\n  { value: \"54\", label: \"54\" },\n  { value: \"55\", label: \"55\" },\n  { value: \"56\", label: \"56\" },\n  { value: \"57\", label: \"57\" },\n  { value: \"58\", label: \"58\" },\n  { value: \"59\", label: \"59\" },\n];\n\nconst hourSet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n];\n\nconst daySet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n];\n\nconst optionGPUsc = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst memoryOptions = [\n  { value: \"1GB\", label: \"1GB\" },\n  { value: \"2GB\", label: \"2GB\" },\n  { value: \"4GB\", label: \"4GB\" },\n  { value: \"8GB\", label: \"8GB\" },\n  { value: \"16GB\", label: \"16GB\" },\n  { value: \"32GB\", label: \"32GB\" },\n];\n\nconst memoryOptions2 = [\n  { value: \"1GB\", label: \"1GB\" },\n  { value: \"2GB\", label: \"2GB\" },\n  { value: \"4GB\", label: \"4GB\" },\n  { value: \"8GB\", label: \"8GB\" },\n  { value: \"16GB\", label: \"16GB\" },\n  { value: \"32GB\", label: \"32GB\" },\n  { value: \"64GB\", label: \"64GB\" },\n];\n\nconst moduleListSabine = [\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  \n  {\n    value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n    label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n    label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  },\n  { value: \"GROMACS/2018.3-intel-2017b\", label: \"GROMACS/2018.3-intel-2017b\" },\n  {\n    value: \"GROMACS/2018.3-intelcuda-2017b\",\n    label: \"GROMACS/2018.3-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n    label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n    label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b\",\n    label: \"GROMACS/2018.8-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2019.6-intelcuda-2017b\",\n    label: \"GROMACS/2019.6-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n    label: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  },\n  { value: \"R/3.4.0-iomkl-2017b-bare\", label: \"R/3.4.0-iomkl-2017b-bare\" },\n  { value: \"R/3.4.1/gcc\", label: \"R/3.4.1/gcc\" },\n  {\n    value: \"R/3.5.1-intel-2017b-X11-20171023\",\n    label: \"R/3.5.1-intel-2017b-X11-20171023\",\n  },\n  { value: \"R/3.5.1-intel-2018b\", label: \"R/3.5.1-intel-2018b\" },\n  { value: \"R/3.6.1-intel-2018b\", label: \"R/3.6.1-intel-2018b\" },\n\n  { value: \"python/2.7\", label: \"python/2.7\" },\n  { value: \"python/3.5\", label: \"python/3.5\" },\n  { value: \"python/3.6\", label: \"python/3.6\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n  { value: \"matlab/r2017b\", label: \"matlab/r2017b\" },\n  { value: \"matlab/r2018a\", label: \"matlab/r2018a\" },\n  { value: \"matlab/r2018b \", label: \"matlab/r2018b \" },\n  { value: \"matlab/r2019a\", label: \"matlab/r2019a\" },\n  { value: \"matlab/r2019b\", label: \"matlab/r2019b\" },\n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n];\n\nconst moduleListCarya = [\n \n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n  { value: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\",label: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\"},\n  { value: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\", label: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\" },\n  { value: \"GROMACS/2020.4-intelcuda-2019b\", label: \"GROMACS/2020.4-intelcuda-2019b\"},\n  { value: \"R/4.0.2-intel-2019b\", label: \"R/4.0.2-intel-2019b\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n];\n\nconst moduleListOpuntia = [\n  { value: \"matlab/r2017b\", label: \"matlab/r2017b\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n  { value: \"matlab/r2018a\", label: \"matlab/r2018a\" },\n  { value: \"matlab/r2018b\", label: \"matlab/r2018b\" },\n  { value: \"matlab/r2019a\", label: \"matlab/r2019a\" },\n  { value: \"matlab/r2019b\", label: \"matlab/r2019b\" },\n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  {\n    value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n    label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n    label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  },\n  { value: \"GROMACS/2018.3-intel-2017b\", label: \"GROMACS/2018.3-intel-2017b\" },\n  {\n    value: \"GROMACS/2018.3-intelcuda-2017b\",\n    label: \"GROMACS/2018.3-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n    label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n    label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b\",\n    label: \"GROMACS/2018.8-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2019.6-intelcuda-2017b\",\n    label: \"GROMACS/2019.6-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n    label: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  },\n  { value: \"R/3.4.0-iomkl-2017b-bare\", label: \"R/3.4.0-iomkl-2017b-bare\" },\n  { value: \"R/3.4.1/gcc\", label: \"R/3.4.1/gcc\" },\n  { value: \"R/3.5.1-intel-2017b-X11-20171023\", label: \"R/3.5.1-intel-2017b-X11-20171023\"},\n  { value: \"R/3.5.1-intel-2018b\", label: \"R/3.5.1-intel-2018b\" },\n  { value: \"R/3.6.1-intel-2018b\", label: \"R/3.6.1-intel-2018b\" },\n  { value: \"python/2.7\", label: \"python/2.7\" },\n  { value: \"python/3.5\", label: \"python/3.5\" },\n  { value: \"python/3.6\", label: \"python/3.6\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n];\nconst moduleListDef = [{ value: \"ERROR\", label: \"ERROR\" }];\n\nvar gpuText;\nfunction App() {\n  const [jobTitle, SetJobTitle] = useState(\"\");\n  const [executableCall, handleExecutableCall] = useState(\"\");\n  const [emailAddr, SethandleEmailAddr] = useState(\"\");\n  const [allEmail, setAllEmail] = useState(false);\n  const [emailNotification, setEmailNotification] = useState(\"\");\n  const [numberOfNode, setNumberOfNode] = useState(\"\");\n  const [numberOfMemory, setNumberOfMemory] = useState(\"\");\n  const [moduleValues, setModuleValues] = useState(null);\n  const [numberOfCore, setNumberOfCore] = useState(\"\");\n  const [clusterType, setClusterType] = useState(\"\");\n  const [GPUNumber, setGPUNumber] = useState(\"\");\n  const [adjustGPU, setAdjustGPU] = useState(false);\n  const [adjustRunTime, setAdjustRunTime] = useState(false);\n  const [days, setDays] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [minute, setMin] = useState(\"\");\n  const [second, setSec] = useState(\"\");\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorCluster, setErrorCluster] = useState(false);\n  const [errorModules, setErrorModules] = useState(false);\n  const [errorExecutable, setErrorExecutable] = useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n\n  useEffect(() => {}, [\n    errorEmail,\n    errorTitle,\n    errorCluster,\n    errorModules,\n    errorExecutable,\n  ]);\n\n \n function chBackcolor() {\n  var f = document.getElementById('scripter');\n  var h = document.getElementById('scriptT');\n  setTimeout(function() {\n     h.style.color = ( f.style.color== \"#000000\" ? '' : \"#000000\");\n     f.style.background = ( f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\");\n  }, 600);\n  setTimeout(function() {\n    h.style.color = ( f.style.color == \"#000000\" ? '' : \"#000000\");\n    f.style.background = ( f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\");\n  }, 1200);\n  h.style.color = \"#c8102e\";\n  f.style.background = \"#d8cd9b\";\n }\n\n\n  const handleJob = (e) => {\n    setErrorTitle(false);\n\n    SetJobTitle(e.target.value);\n  };\n  const handleEmailAddr = (e) => {\n    setErrorEmail(false);\n    SethandleEmailAddr(e.target.value);\n  };\n\n  var email;\n  \n  const renderEmailType = () => {\n    email = \"NONE\";\n    let emailType = null;\n    if (emailNotification.length === 0 && allEmail === false) {\n      if (emailAddr !== \"\") {\n        emailType = `#SBATCH --mail-type=${email}`;\n      } else {\n        email = \"NONE\";\n        emailType = `#SBATCH --mail-type=${email}`;\n      }\n    } else if (emailNotification.length === 4) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else if (allEmail === true) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else {\n      email = emailNotification.join(\",\");\n      emailType = `#SBATCH --mail-type=${email}`;\n    }\n    \n    return emailType;\n  };\n\n  const renderGPU = () => {\n    if (adjustGPU) {\n      gpuText = `#SBATCH --gpus-per-node=${GPUNumber}`;\n    } else {\n      gpuText = \"\";\n    }\n    return gpuText;\n  };\n\n  const renderCoreNode = () => {\n    let ncText = null;\n    if (numberOfCore || numberOfNode) {\n      ncText = `#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}`;\n    } else {\n      ncText = \"\";\n    }\n    return ncText;\n  };\n  const renderTime = () => {\n    let timeText = null;\n    if (days || hour || minute || second) {\n      timeText = `#SBATCH -t ${days * 24 + hour * 1}:${minute}:${second}`;\n    } else {\n      timeText = \"\";\n    }\n    return timeText;\n  };\n  const renderMem = () => {\n    let memText = null;\n    if (numberOfMemory) {\n      memText = `#SBATCH --mem-per-cpu=${numberOfMemory}`;\n    } else {\n      memText = \"\";\n    }\n    return memText;\n  };\n\n  const getModules = () => {\n    return moduleValues?.map((m) => {\n      return `module load ${m.value}\\n`;\n    });\n  };\n\n  var codeCopy = `#!/bin/bash\\n#SBATCH -J ${jobTitle}\\n#SBATCH -o ${jobTitle}.o%j\\n#SBATCH --mail-user=${emailAddr}\\n${renderEmailType()}\\n#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}\\n#SBATCH -t ${\n    days * 24 + hour * 1\n  }:${minute}:${second}\\n${renderGPU()}\\n#SBATCH --mem-per-cpu=${numberOfMemory}\\n${getModules()}\\n${executableCall}`;\n  codeCopy = codeCopy.replaceAll(\",m\", \"m\");\n\n  var alertMsg;\n  var timeWarn = \"\";\n  var emailWarn = \"\";\n  var jobWarn = \"\";\n  var modWarn = \"\";\n  var clustWarn =\"\";\n  var execWarn = \"\";\n  var etypeWarn = \"\";\n\n  const emailBox = () => {\n    var emailChecker = document.querySelectorAll(\".email-checks\");\n    let array = [];\n    emailChecker.forEach((element) => {\n      array.push(element.childNodes[0].checked);\n    });\n\n    let ans = array.find((e) => e === true);\n    if (!ans) {\n      document.getElementById(\"email-checks-all\").checked = true;\n      setAllEmail(true);\n      \n      \n    }\n\n    \n\n  }\n\n\n  const Validate = () => {\n    \n   \n\n    //Regex for Valid Characters i.e. Alphabets, Numbers and Space.\n    var regex = /^[A-Za-z0-9]+$/;\n    //Validate TextBox value against the Regex.\n    var isValid = regex.test(document.getElementById(\"jobTitle\").value);\n    if (!isValid && document.getElementById(\"jobTitle\").pattern != \"[^s]*\") {\n      jobWarn =\"Error found in Job Title\\n\";\n      setErrorTitle(true);\n      alertMsg = true;\n      isValid = false;\n    \n      \n    } else {\n      isValid = true;\n      alertMsg = false;\n\n      if (document.getElementById(\"executableCall\").value === \" \") {\n        console.log(\"great\");\n        alertMsg = true;\n      }\n      \n\n      return isValid;\n    }\n    \n  };\n\n  function validateEmail() {\n    var emailID = document.getElementById(\"emailAddress\").value;\n\n    var atpos = emailID.indexOf(\"@\");\n    var dotpos = emailID.lastIndexOf(\".\");\n\n    if (atpos < 1 || dotpos - atpos < 2) {\n      alertMsg = true;\n      emailWarn = \"Email field is incorrect or empty\\n\";\n      setErrorEmail(true);\n    }\n   \n    if(email == \"NONE\"){\n      etypeWarn = \"Select Email Notification Type\\n\";\n      alertMsg = true;\n     }\n\n    if (!clusterType) {\n      console.log(clusterType);\n      setErrorCluster(true);\n      clustWarn = \"Cluster not selected!\\n\";\n      alertMsg = true;\n      \n    }\n    else{\n\n    if (moduleValues == null||moduleValues =='') {\n      setErrorModules(true);\n      modWarn = \"No modules selected!\\n\";\n      alertMsg = true;\n      \n    } \n\n  \n\n    let call = document.getElementById(\"executableCall\").value;\n    if (!call) {\n      setErrorExecutable(true);\n     \n        execWarn = \"Error in Executable Call field\\n\";\n        alertMsg = true;\n      \n    }\n      if ((days + hour + minute + second) == 0)\n         {\n        alertMsg = true;\n        timeWarn = \"Time field must not total zero\\n\";\n      }\n  }\n\n    if (alertMsg === true) {\n      alert(\n         jobWarn + emailWarn + etypeWarn + clustWarn + modWarn + execWarn + timeWarn \n      );\n      copyToClipboard(\"Error found, please return to generator\");\n    } else {\n      alert(\"Copied\");\n    }\n    return true;\n  }\n\n  function copyToClipboard(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData(\"Text\", text);\n    } else if (\n      document.queryCommandSupported &&\n      document.queryCommandSupported(\"copy\")\n    ) {\n      var textarea = document.createElement(\"textarea\");\n      textarea.textContent = text;\n      textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        console.warn(\"Copy to clipboard failed.\", ex);\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n          Single Core and MPI\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <p>The <em>modules</em> utility sets up your environment paths for particular versions of specified programs. It is possible to use more than one module in your job (just list all the ones you need on separate lines).</p>\n        <br></br>\n        <p>For example to use version <code>3.2</code> of the application <code>foo</code>, which was compiled with <code>gcc</code> version 4.9.2, you should load the module called: <code>foo/3.2-gcc-4.9.2</code></p>\n        <br></br><p>You can list all available modules using the <code>module avail</code> command.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"script-title\" style={{ marginTop: \"50px\" }}>\n        <p>SLURM WORKLOAD MANAGER</p>\n      </div>\n      <div className=\"script-titleGen\" style={{ marginTop: \"-22px\" }}>\n        <p>SCRIPT GENERATOR</p>\n      </div>\n      <div className=\"line\"></div>\n      <div className=\"form-container\" style={{ marginBottom: \"30px\" }}>\n        <div className=\"flex\">\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Job Title</Form.Label>\n              <Form.Control\n                value={jobTitle}\n                className={`${errorTitle ? \"borderColor\" : \"borderRemove\"}`}\n                onChange={handleJob}\n                type=\"text\"\n                placeholder=\"my_mpi_job\"\n                id=\"jobTitle\"\n                pattern=\"[^\\s]*\"\n              />\n\n              <Form.Text className=\"text-muted\">\n                Create a name for your job (DO NOT USE SPACE OR SPECIAL\n                CHARACTERS)\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"emailAddress\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                value={emailAddr}\n                className={`${errorEmail ? \"borderColor\" : \"borderRemove\"}`}\n                onChange={handleEmailAddr}\n                type=\"email\"\n                placeholder=\"username@uh.edu\"\n                id=\"emailAddress\"\n              />\n              <Form.Text className=\"text-muted\">\n                Enter your email address(e.g cougar123@uh.edu)\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"emailNotification\">\n              <Form.Label>Email Notification</Form.Label>\n              <div className=\"email-check\" style={{ fontSize: \"11px\" }}>\n                {EmailTypes.map((type, index) => {\n                  const label = type.toLocaleLowerCase();\n                  return (\n                    <Form.Check\n                      key={index}\n                      type=\"checkbox\"\n                      className=\"email-checks\"\n                      // checked={emailNotification.includes(type)}\n                      default={1}\n                      disabled={allEmail === true}\n                      onChange={() => {\n                        if (emailNotification.includes(type)) {\n                          const emails = emailNotification.filter(\n                            (removeType) => removeType !== type\n                          );\n                          setEmailNotification(emails);\n                          return;\n                        }\n                        setEmailNotification([...emailNotification, type]);\n                      }}\n                      label={`On Job ${\n                        label.charAt(0).toUpperCase() + label.slice(1)\n                      }`}\n                    />\n                  );\n                })}\n                <Form.Check\n                  checked={allEmail}\n                  id=\"email-checks-all\"\n                  onChange={() => setAllEmail(!allEmail)}\n                  type=\"checkbox\"\n                  label=\"ALL\"\n                />\n              </div>\n              <Form.Text className=\"text-muted\">\n                Please select the type of email notifications about your job,\n                you would like to receive.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"clusterType\">\n              <Form.Label>Cluster Name</Form.Label>\n              <Select\n                className={`${\n                  errorCluster ? \"borderColorCluster\" : \"borderRemove\"\n                }`}\n                onChange={(e) => {\n                  setErrorCluster(false);\n                  setClusterType(e.value);\n                  setAdjustGPU(!adjustGPU);\n                  setGPUNumber(\"1\");\n                  {\n                    gpuText = \"\";\n                  }\n                  handleExecutableCall(\"\");\n                  setModuleValues(null);\n                  setDays(\"0\");\n                  setHour(\"4\");\n                  setMin(\"0\");\n                  setSec(\"0\");\n                  setAdjustRunTime(false);\n                  setNumberOfCore(\"1\");\n                  setNumberOfNode(\"1\");\n                  setNumberOfMemory(\"1GB\");\n                  setAdjustGPU(false);\n                  chBackcolor(\"#7e6f30\");\n                }}\n                options={cluster}\n                moduleValues={(\"\", 0)}\n                id=\"clusterType\"\n              \n          \n              />\n              <Form.Text className=\"text-muted\">\n                Select cluster of choice\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Label>Number of Nodes</Form.Label>\n              <Select\n                value={{ value: numberOfNode, label: numberOfNode }}\n                onChange={(e) => setNumberOfNode(e.value)}\n                options={optionNodes}\n                isDisabled={clusterType === \"\"}\n                id=\"numberOfNode\"\n              />\n              <Form.Text className=\"text-muted\">\n                Select the number of compute nodes your job will run on.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"numberOfCore\">\n              <Form.Label>Number of Cores Per Node</Form.Label>\n              <Select\n                value={{ value: numberOfCore, label: numberOfCore }}\n                onChange={(e) => setNumberOfCore(e.value)}\n                isDisabled={clusterType === \"\"}\n                id=\"numberOfCore\"\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return optionCoresSabine;\n                    case \"CARYA\":\n                      return optionCoresCarya;\n                    case \"OPUNTIA\":\n                      return optionCoresOpuntia;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n              />\n              <Form.Text className=\"text-muted\">\n                Select the number of processor cores per node your job will run\n                on. Total number of cores requested will be the product of the\n                number of nodes and this value.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Label>Job Runtime</Form.Label>\n              <div className=\"row-container\" style={{ width: \"700px\" }}>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: days, label: days }}\n                    onChange={(e) => {\n                      setDays(e.value);\n                    }}\n                    options={daySet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"days\"\n                    id=\"days\"\n                  />\n                  <label htmlFor=\"days\">Days</label>\n                </div>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: hour, label: hour }}\n                    onChange={(e) => {\n                      setHour(e.value);\n                    }}\n                    options={hourSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"hours\"\n                    id=\"hours\"\n                  />\n                  <label htmlFor=\"days\">hours</label>\n                </div>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: minute, label: minute }}\n                    onChange={(e) => {\n                      setMin(e.value);\n                    }}\n                    options={minSecSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"minutes\"\n                    id=\"minutes\"\n                  />\n                  <label htmlFor=\"days\">min</label>\n                </div>\n                <div className=\"row-container\" style={{ width: \"300px\" }}>\n                  <Select\n                    value={{ value: second, label: second }}\n                    onChange={(e) => {\n                      setSec(e.value);\n                    }}\n                    options={minSecSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"seconds\"\n                    id=\"seconds\"\n                  />\n                  <label htmlFor=\"days\">sec</label>\n                </div>\n              </div>\n              <Form.Check\n                checked={adjustRunTime}\n                onChange={() => setAdjustRunTime(!adjustRunTime)}\n                type=\"checkbox\"\n                label=\"Manually Adjust Runtime\"\n                disabled={clusterType === \"\"}\n              />\n              <Form.Text className=\"text-muted\">\n                This sets the amount of run time you are requesting to be\n                allocated for your job. The default job time is displayed. If\n                you want to adjust this manually, just click the checkbox next\n                to 'Manually Adjust Runtime' and this will allow you to adjust\n                the controls.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"numberOfMemory\">\n              <Form.Label>Memory Size for Cores</Form.Label>\n              <Select\n                value={{ value: numberOfMemory, label: numberOfMemory }}\n                onChange={(e) => setNumberOfMemory(e.value)}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return memoryOptions;\n                    case \"CARYA\":\n                      return memoryOptions2;\n                    case \"OPUNTIA\":\n                      return memoryOptions;\n                    default:\n                      return memoryOptions;\n                  }\n                })()}\n                isDisabled={clusterType === \"\"}\n              />\n              <Form.Text className=\"text-muted\">\n                This sets the amount of memory you want to allocate to each core\n                for your job. If you leave this in blank, your job will run with\n                the default memory per core.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"checkGPU\">\n              <Form.Label>GPUs per node:</Form.Label>\n              <Form.Check\n                style={{ marginBottom: \"10px\" }}\n                type=\"checkbox\"\n                checked={adjustGPU}\n                disabled={clusterType === \"\"}\n                onChange={() => {\n                  setAdjustGPU(!adjustGPU);\n                }}\n                label=\"Select for GPU\"\n              />\n              <Select\n                value={{ value: GPUNumber, label: GPUNumber }}\n                onChange={(e) => {\n                  setGPUNumber(e.value);\n                }}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return optionGPUcarya;\n                    case \"CARYA\":\n                      return optionGPUcarya;\n                    case \"OPUNTIA\":\n                      return optionGPU;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n                isDisabled={!adjustGPU}\n                placeholder=\"select GPU value\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"moduleSelect\">\n              <Form.Label>Modules</Form.Label>\n              <Select\n                className={`${\n                  errorModules ? \"borderColorModules\" : \"borderRemove\"\n                }`}\n                isMulti\n                value={moduleValues}\n                onChange={(value) => (\n                  setModuleValues(value), setErrorModules(false)\n                )}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return moduleListSabine;\n                    case \"CARYA\":\n                      return moduleListCarya;\n                    case \"OPUNTIA\":\n                      return moduleListOpuntia;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n                isDisabled={clusterType === \"\"}\n                \n              />\n              <Form.Text className=\"text-muted\">\n              List of modules to load for your job, one per line{\" \"}\n              <Button variant=\"href\" className = \"btnLink\" onClick={() => setModalShow(true)}>\n               (more...)\n               </Button>\n                <MyVerticallyCenteredModal\n                   show={modalShow}\n                   onHide={() => setModalShow(false)}\n               />\n              </Form.Text>\n            </Form.Group>\n            <Form.Group\n              controlId=\"formBasicPassword\"\n              style={{ marginBottom: \"300px\" }}\n            >\n              <Form.Label>Executable Call</Form.Label>\n              <Form.Control\n                className={`${\n                  errorExecutable ? \"borderColorExecutable\" : \"borderRemove\"\n                }`}\n                value={executableCall}\n                onChange={(e) => (\n                  handleExecutableCall(e.target.value),\n                  setErrorExecutable(false)\n                )}\n                type=\"text\"\n                placeholder=\"python example.py\"\n                disabled={clusterType === \"\"}\n                id=\"executableCall\"\n              />\n              <Form.Text className=\"text-muted\">\n                Enter the program or complete command line statement you wish to\n                run for your job. If you pipe input or pass argument, include\n                those as well.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        </div>\n        <div className=\"space\"></div>\n        {/*\n\n          Script Code\n\n        */}\n        \n        <div className=\"flex2\">\n          <div id = \"scriptT\" className=\"slurm-title\" style={{ marginTop: \"10px\" }}>\n            <p>{`Cluster Name:  ${clusterType}`}</p>\n          </div>\n          <div id = \"scripter\" className=\"script-code\" style={{ marginTop: \"20px\" }}>\n            <div className=\"code\">\n              <span>#!/bin/bash</span>\n              <span>{`#SBATCH -J ${jobTitle}`}</span>\n              <span>{`#SBATCH -o ${jobTitle}.o%j`}</span>\n              <p>{`#SBATCH --mail-user=${emailAddr}`}</p>\n              <p>{renderEmailType()}</p>\n              <p>{renderCoreNode()}</p>\n              <p>{renderTime()}</p>\n              <p>{renderGPU()}</p>\n              <p>{renderMem()}</p>\n            </div>\n            <div className=\"code\">\n              {moduleValues &&\n                moduleValues.map((m, index) => (\n                  <p key={index}>{`module load ${m.value}`}</p>\n                ))}\n            </div>\n            <div className=\"code\">\n              <p>{executableCall}</p>\n            </div>\n          </div>\n          <div className=\"btn\">\n            <p>\n              <Button\n                id=\"clickBtn\"\n                onClick={() => {\n                  if (Validate()) {\n                    copyToClipboard(codeCopy);\n                  }\n                  validateEmail();\n                }}\n              >\n                Copy Script\n              </Button>\n            </p>\n          </div>\n          <div>\n            <p style={{ marginTop: \"10px\" }}>To use this script</p>\n            <div className=\"submit-script\">\n              <p>\n                1. Copy and paste this script into a new file in your job or\n                project directory on the cluster, using an editor like nano or\n                vi.\n              </p>\n              <p>2. Submit your job::</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}