{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["EmailTypes","cluster","value","label","optionNodes","optionGPU","optionGPUcarya","optionCoresCarya","optionCoresSabine","optionCoresOpuntia","minSecSet","hourSet","daySet","memoryOptions","memoryOptions2","moduleListSabine","moduleListCarya","moduleListOpuntia","moduleListDef","App","useState","jobTitle","SetJobTitle","executableCall","handleExecutableCall","emailAddr","SethandleEmailAddr","allEmail","setAllEmail","emailNotification","setEmailNotification","numberOfNode","setNumberOfNode","numberOfMemory","setNumberOfMemory","moduleValues","setModuleValues","numberOfCore","setNumberOfCore","clusterType","setClusterType","GPUNumber","setGPUNumber","adjustGPU","setAdjustGPU","adjustRunTime","setAdjustRunTime","days","setDays","hour","setHour","minute","setMin","second","setSec","errorTitle","setErrorTitle","errorEmail","setErrorEmail","errorCluster","setErrorCluster","errorModules","setErrorModules","errorExecutable","setErrorExecutable","React","modalShow","setModalShow","useEffect","email","alertMsg","renderEmailType","emailType","length","join","renderGPU","codeCopy","map","m","replaceAll","timeWarn","emailWarn","jobWarn","modWarn","clustWarn","execWarn","etypeWarn","copyToClipboard","text","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","console","warn","removeChild","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Footer","Button","onClick","onHide","className","marginTop","marginBottom","Form","Group","controlId","Label","Control","onChange","e","target","type","placeholder","pattern","Text","fontSize","index","toLocaleLowerCase","Check","default","disabled","includes","emails","filter","removeType","charAt","toUpperCase","slice","checked","f","getElementById","h","setTimeout","color","background","chBackcolor","options","isDisabled","width","htmlFor","isMulti","variant","show","isValid","test","log","Validate","emailID","atpos","indexOf","dotpos","lastIndexOf","alert","validateEmail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a949310.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Fade, Form, NavItem } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport useInputState from \"./hooks/useInputState\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal} from 'react-bootstrap';\n\nvar checkMan;\nconst EmailTypes = [\"BEGIN\", \"END\", \"FAIL\", \"REQUEUE\"];\n\n\nconst cluster = [\n  { value: \"CARYA\", label: \"CARYA\" },\n  { value: \"OPUNTIA\", label: \"OPUNTIA\" },\n  { value: \"SABINE\", label: \"SABINE\" },\n];\n\nconst optionNodes = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst optionGPU = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n];\n\nconst optionGPUcarya = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst optionCoresCarya = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n  { value: \"41\", label: \"41\" },\n  { value: \"42\", label: \"42\" },\n  { value: \"43\", label: \"43\" },\n  { value: \"44\", label: \"44\" },\n  { value: \"45\", label: \"45\" },\n  { value: \"46\", label: \"46\" },\n  { value: \"47\", label: \"47\" },\n  { value: \"48\", label: \"48\" },\n];\n\nconst optionCoresSabine = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n];\n\nconst optionCoresOpuntia = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n];\n\nconst minSecSet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n  { value: \"24\", label: \"24\" },\n  { value: \"25\", label: \"25\" },\n  { value: \"26\", label: \"26\" },\n  { value: \"27\", label: \"27\" },\n  { value: \"28\", label: \"28\" },\n  { value: \"29\", label: \"29\" },\n  { value: \"30\", label: \"30\" },\n  { value: \"31\", label: \"31\" },\n  { value: \"32\", label: \"32\" },\n  { value: \"33\", label: \"33\" },\n  { value: \"34\", label: \"34\" },\n  { value: \"35\", label: \"35\" },\n  { value: \"36\", label: \"36\" },\n  { value: \"37\", label: \"37\" },\n  { value: \"38\", label: \"38\" },\n  { value: \"39\", label: \"39\" },\n  { value: \"40\", label: \"40\" },\n  { value: \"41\", label: \"41\" },\n  { value: \"42\", label: \"42\" },\n  { value: \"43\", label: \"43\" },\n  { value: \"44\", label: \"44\" },\n  { value: \"45\", label: \"45\" },\n  { value: \"46\", label: \"46\" },\n  { value: \"47\", label: \"47\" },\n  { value: \"48\", label: \"48\" },\n  { value: \"49\", label: \"49\" },\n  { value: \"50\", label: \"50\" },\n  { value: \"51\", label: \"51\" },\n  { value: \"52\", label: \"52\" },\n  { value: \"53\", label: \"53\" },\n  { value: \"54\", label: \"54\" },\n  { value: \"55\", label: \"55\" },\n  { value: \"56\", label: \"56\" },\n  { value: \"57\", label: \"57\" },\n  { value: \"58\", label: \"58\" },\n  { value: \"59\", label: \"59\" },\n];\n\nconst hourSet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n  { value: \"14\", label: \"14\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"16\", label: \"16\" },\n  { value: \"17\", label: \"17\" },\n  { value: \"18\", label: \"18\" },\n  { value: \"19\", label: \"19\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"21\", label: \"21\" },\n  { value: \"22\", label: \"22\" },\n  { value: \"23\", label: \"23\" },\n];\n\nconst daySet = [\n  { value: \"0\", label: \"0\" },\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"11\", label: \"11\" },\n  { value: \"12\", label: \"12\" },\n  { value: \"13\", label: \"13\" },\n];\n\nconst optionGPUsc = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n];\n\nconst memoryOptions = [\n  { value: \"1GB\", label: \"1GB\" },\n  { value: \"2GB\", label: \"2GB\" },\n  { value: \"4GB\", label: \"4GB\" },\n  { value: \"8GB\", label: \"8GB\" },\n  { value: \"16GB\", label: \"16GB\" },\n  { value: \"32GB\", label: \"32GB\" },\n];\n\nconst memoryOptions2 = [\n  { value: \"1GB\", label: \"1GB\" },\n  { value: \"2GB\", label: \"2GB\" },\n  { value: \"4GB\", label: \"4GB\" },\n  { value: \"8GB\", label: \"8GB\" },\n  { value: \"16GB\", label: \"16GB\" },\n  { value: \"32GB\", label: \"32GB\" },\n  { value: \"64GB\", label: \"64GB\" },\n];\n\nconst moduleListSabine = [\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  \n  {\n    value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n    label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n    label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  },\n  { value: \"GROMACS/2018.3-intel-2017b\", label: \"GROMACS/2018.3-intel-2017b\" },\n  {\n    value: \"GROMACS/2018.3-intelcuda-2017b\",\n    label: \"GROMACS/2018.3-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n    label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n    label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b\",\n    label: \"GROMACS/2018.8-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2019.6-intelcuda-2017b\",\n    label: \"GROMACS/2019.6-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n    label: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  },\n  { value: \"R/3.4.0-iomkl-2017b-bare\", label: \"R/3.4.0-iomkl-2017b-bare\" },\n  { value: \"R/3.4.1/gcc\", label: \"R/3.4.1/gcc\" },\n  {\n    value: \"R/3.5.1-intel-2017b-X11-20171023\",\n    label: \"R/3.5.1-intel-2017b-X11-20171023\",\n  },\n  { value: \"R/3.5.1-intel-2018b\", label: \"R/3.5.1-intel-2018b\" },\n  { value: \"R/3.6.1-intel-2018b\", label: \"R/3.6.1-intel-2018b\" },\n\n  { value: \"python/2.7\", label: \"python/2.7\" },\n  { value: \"python/3.5\", label: \"python/3.5\" },\n  { value: \"python/3.6\", label: \"python/3.6\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n  { value: \"matlab/r2017b\", label: \"matlab/r2017b\" },\n  { value: \"matlab/r2018a\", label: \"matlab/r2018a\" },\n  { value: \"matlab/r2018b \", label: \"matlab/r2018b \" },\n  { value: \"matlab/r2019a\", label: \"matlab/r2019a\" },\n  { value: \"matlab/r2019b\", label: \"matlab/r2019b\" },\n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n];\n\nconst moduleListCarya = [\n \n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n  { value: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\",label: \"GROMACS/2018.8-intelcuda-2019b-PLUMED-2.6.1\"},\n  { value: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\", label: \"GROMACS/2020.4-intel-2020u2-PLUMED-2.7.0\" },\n  { value: \"GROMACS/2020.4-intelcuda-2019b\", label: \"GROMACS/2020.4-intelcuda-2019b\"},\n  { value: \"R/4.0.2-intel-2019b\", label: \"R/4.0.2-intel-2019b\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n];\n\nconst moduleListOpuntia = [\n  { value: \"matlab/r2017b\", label: \"matlab/r2017b\" },\n  { value: \"matlab/r2020b\", label: \"matlab/r2020b\" },\n  { value: \"matlab/r2018a\", label: \"matlab/r2018a\" },\n  { value: \"matlab/r2018b\", label: \"matlab/r2018b\" },\n  { value: \"matlab/r2019a\", label: \"matlab/r2019a\" },\n  { value: \"matlab/r2019b\", label: \"matlab/r2019b\" },\n  { value: \"matlab/r2020a\", label: \"matlab/r2020a\" },\n  {\n    value: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n    label: \"GROMACS/4.6.7-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2016-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2016-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018-intel-2018-GPU-enabled\",\n    label: \"GROMACS/2018-intel-2018-GPU-enabled\",\n  },\n  {\n    value: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n    label: \"GROMACS/2018.3-intel-2017b-PLUMED-2.4.3\",\n  },\n  { value: \"GROMACS/2018.3-intel-2017b\", label: \"GROMACS/2018.3-intel-2017b\" },\n  {\n    value: \"GROMACS/2018.3-intelcuda-2017b\",\n    label: \"GROMACS/2018.3-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n    label: \"GROMACS/2018.6-intel-2017b-PLUMED-2.5.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n    label: \"GROMACS/2018.8-intelcuda-2017b-PLUMED-2.6.1\",\n  },\n  {\n    value: \"GROMACS/2018.8-intelcuda-2017b\",\n    label: \"GROMACS/2018.8-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2019.6-intelcuda-2017b\",\n    label: \"GROMACS/2019.6-intelcuda-2017b\",\n  },\n  {\n    value: \"GROMACS/2020-intel-2019-GPU-enabled\",\n    label: \"GROMACS/2020-intel-2019-GPU-enabled\",\n  },\n  { value: \"R/3.4.0-iomkl-2017b-bare\", label: \"R/3.4.0-iomkl-2017b-bare\" },\n  { value: \"R/3.4.1/gcc\", label: \"R/3.4.1/gcc\" },\n  { value: \"R/3.5.1-intel-2017b-X11-20171023\", label: \"R/3.5.1-intel-2017b-X11-20171023\"},\n  { value: \"R/3.5.1-intel-2018b\", label: \"R/3.5.1-intel-2018b\" },\n  { value: \"R/3.6.1-intel-2018b\", label: \"R/3.6.1-intel-2018b\" },\n  { value: \"python/2.7\", label: \"python/2.7\" },\n  { value: \"python/3.5\", label: \"python/3.5\" },\n  { value: \"python/3.6\", label: \"python/3.6\" },\n  { value: \"python/3.7\", label: \"python/3.7\" },\n];\nconst moduleListDef = [{ value: \"ERROR\", label: \"ERROR\" }];\n\nvar gpuText;\nfunction App() {\n  const [jobTitle, SetJobTitle] = useState(\"\");\n  const [executableCall, handleExecutableCall] = useState(\"\");\n  const [emailAddr, SethandleEmailAddr] = useState(\"\");\n  const [allEmail, setAllEmail] = useState(false);\n  const [emailNotification, setEmailNotification] = useState(\"\");\n  const [numberOfNode, setNumberOfNode] = useState(\"\");\n  const [numberOfMemory, setNumberOfMemory] = useState(\"\");\n  const [moduleValues, setModuleValues] = useState(null);\n  const [numberOfCore, setNumberOfCore] = useState(\"\");\n  const [clusterType, setClusterType] = useState(\"\");\n  const [GPUNumber, setGPUNumber] = useState(\"\");\n  const [adjustGPU, setAdjustGPU] = useState(false);\n  const [adjustRunTime, setAdjustRunTime] = useState(false);\n  const [days, setDays] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [minute, setMin] = useState(\"\");\n  const [second, setSec] = useState(\"\");\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorCluster, setErrorCluster] = useState(false);\n  const [errorModules, setErrorModules] = useState(false);\n  const [errorExecutable, setErrorExecutable] = useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n\n  useEffect(() => {}, [\n    errorEmail,\n    errorTitle,\n    errorCluster,\n    errorModules,\n    errorExecutable,\n  ]);\n\n \n function chBackcolor() {\n  var f = document.getElementById('scripter');\n  var h = document.getElementById('scriptT');\n  setTimeout(function() {\n     h.style.color = ( f.style.color== \"#000000\" ? '' : \"#000000\");\n     f.style.background = ( f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\");\n  }, 600);\n  setTimeout(function() {\n    h.style.color = ( f.style.color == \"#000000\" ? '' : \"#000000\");\n    f.style.background = ( f.style.background == \"#fff2b7\" ? '' : \"#fff2b7\");\n  }, 1200);\n  h.style.color = \"#c8102e\";\n  f.style.background = \"#d8cd9b\";\n }\n\n\n  const handleJob = (e) => {\n    setErrorTitle(false);\n\n    SetJobTitle(e.target.value);\n  };\n  const handleEmailAddr = (e) => {\n    setErrorEmail(false);\n    SethandleEmailAddr(e.target.value);\n  };\n\n  var email;\n  \n  const renderEmailType = () => {\n    email = \"NONE\";\n    let emailType = null;\n    if (emailNotification.length === 0 && allEmail === false) {\n      if (emailAddr !== \"\") {\n        emailType = `#SBATCH --mail-type=${email}`;\n      } else {\n        email = \"NONE\";\n        emailType = `#SBATCH --mail-type=${email}`;\n      }\n    } else if (emailNotification.length === 4) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else if (allEmail === true) {\n      email = \"ALL\";\n      emailType = `#SBATCH --mail-type=${email}`;\n    } else {\n      email = emailNotification.join(\",\");\n      emailType = `#SBATCH --mail-type=${email}`;\n    }\n    \n    return emailType;\n  };\n\n  const renderGPU = () => {\n    if (adjustGPU) {\n      gpuText = `#SBATCH --gpus-per-node=${GPUNumber}`;\n    } else {\n      gpuText = \"\";\n    }\n    return gpuText;\n  };\n\n  const renderCoreNode = () => {\n    let ncText = null;\n    if (numberOfCore || numberOfNode) {\n      ncText = `#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}`;\n    } else {\n      ncText = \"\";\n    }\n    return ncText;\n  };\n  const renderTime = () => {\n    let timeText = null;\n    if (days || hour || minute || second) {\n      timeText = `#SBATCH -t ${days * 24 + hour * 1}:${minute}:${second}`;\n    } else {\n      timeText = \"\";\n    }\n    return timeText;\n  };\n  const renderMem = () => {\n    let memText = null;\n    if (numberOfMemory) {\n      memText = `#SBATCH --mem-per-cpu=${numberOfMemory}`;\n    } else {\n      memText = \"\";\n    }\n    return memText;\n  };\n\n  const getModules = () => {\n    return moduleValues?.map((m) => {\n      return `module load ${m.value}\\n`;\n    });\n  };\n\n  var codeCopy = `#!/bin/bash\\n#SBATCH -J ${jobTitle}\\n#SBATCH -o ${jobTitle}.o%j\\n#SBATCH --mail-user=${emailAddr}\\n${renderEmailType()}\\n#SBATCH --ntasks-per-node=${numberOfCore} -N ${numberOfNode}\\n#SBATCH -t ${\n    days * 24 + hour * 1\n  }:${minute}:${second}\\n${renderGPU()}\\n#SBATCH --mem-per-cpu=${numberOfMemory}\\n${getModules()}\\n${executableCall}`;\n  codeCopy = codeCopy.replaceAll(\",m\", \"m\");\n\n  var alertMsg;\n  var timeWarn = \"\";\n  var emailWarn = \"\";\n  var jobWarn = \"\";\n  var modWarn = \"\";\n  var clustWarn =\"\";\n  var execWarn = \"\";\n  var etypeWarn = \"\";\n\n  const emailBox = () => {\n    var emailChecker = document.querySelectorAll(\".email-checks\");\n    let array = [];\n    emailChecker.forEach((element) => {\n      array.push(element.childNodes[0].checked);\n    });\n\n    let ans = array.find((e) => e === true);\n    if (!ans) {\n      document.getElementById(\"email-checks-all\").checked = true;\n      setAllEmail(true);\n      \n      \n    }\n\n    \n\n  }\n\n\n  const Validate = () => {\n    \n   \n\n    //Regex for Valid Characters i.e. Alphabets, Numbers and Space.\n    var regex = /^[A-Za-z0-9]+$/;\n    //Validate TextBox value against the Regex.\n    var isValid = regex.test(document.getElementById(\"jobTitle\").value);\n    if (!isValid && document.getElementById(\"jobTitle\").pattern != \"[^s]*\") {\n      jobWarn =\"Error found in Job Title\\n\";\n      setErrorTitle(true);\n      alertMsg = true;\n      isValid = false;\n    \n      \n    } else {\n      isValid = true;\n      alertMsg = false;\n\n      if (document.getElementById(\"executableCall\").value === \" \") {\n        console.log(\"great\");\n        alertMsg = true;\n      }\n      \n\n      return isValid;\n    }\n    \n  };\n\n  function validateEmail() {\n    var emailID = document.getElementById(\"emailAddress\").value;\n\n    var atpos = emailID.indexOf(\"@\");\n    var dotpos = emailID.lastIndexOf(\".\");\n\n    if (atpos < 1 || dotpos - atpos < 2) {\n      alertMsg = true;\n      emailWarn = \"Email field is incorrect or empty\\n\";\n      setErrorEmail(true);\n    }\n   \n    if(email == \"NONE\"){\n      etypeWarn = \"Select Email Notification Type\\n\";\n      alertMsg = true;\n     }\n\n    if (!clusterType) {\n      console.log(clusterType);\n      setErrorCluster(true);\n      clustWarn = \"Cluster not selected!\\n\";\n      alertMsg = true;\n      \n    }\n    else{\n\n    if (moduleValues == null||moduleValues =='') {\n      setErrorModules(true);\n      modWarn = \"No modules selected!\\n\";\n      alertMsg = true;\n      \n    } \n\n  \n\n    let call = document.getElementById(\"executableCall\").value;\n    if (!call) {\n      setErrorExecutable(true);\n     \n        execWarn = \"Error in Executable Call field\\n\";\n        alertMsg = true;\n      \n    }\n      if ((days + hour + minute + second) == 0)\n         {\n        alertMsg = true;\n        timeWarn = \"Time field must not total zero\\n\";\n      }\n  }\n\n    if (alertMsg === true) {\n      alert(\n         jobWarn + emailWarn + etypeWarn + clustWarn + modWarn + execWarn + timeWarn \n      );\n      copyToClipboard(\"Error found, please return to generator\");\n    } else {\n      alert(\"Copied\");\n    }\n    return true;\n  }\n\n  function copyToClipboard(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n      return window.clipboardData.setData(\"Text\", text);\n    } else if (\n      document.queryCommandSupported &&\n      document.queryCommandSupported(\"copy\")\n    ) {\n      var textarea = document.createElement(\"textarea\");\n      textarea.textContent = text;\n      textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in Microsoft Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        console.warn(\"Copy to clipboard failed.\", ex);\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n          Single Core and MPI\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <p>The <em>modules</em> utility sets up your environment paths for particular versions of specified programs. It is possible to use more than one module in your job (just list all the ones you need on separate lines).</p>\n        <br></br>\n        <p>For example to use version <code>3.2</code> of the application <code>foo</code>, which was compiled with <code>gcc</code> version 4.9.2, you should load the module called: <code>foo/3.2-gcc-4.9.2</code></p>\n        <br></br><p>You can list all available modules using the <code>module avail</code> command.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"script-title\" style={{ marginTop: \"50px\" }}>\n        <p>SLURM WORKLOAD MANAGER</p>\n      </div>\n      <div className=\"script-titleGen\" style={{ marginTop: \"-22px\" }}>\n        <p>SCRIPT GENERATOR</p>\n      </div>\n      <div className=\"line\"></div>\n      <div className=\"form-container\" style={{ marginBottom: \"30px\" }}>\n        <div className=\"flex\">\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Job Title</Form.Label>\n              <Form.Control\n                value={jobTitle}\n                className={`${errorTitle ? \"borderColor\" : \"borderRemove\"}`}\n                onChange={handleJob}\n                type=\"text\"\n                placeholder=\"my_mpi_job\"\n                id=\"jobTitle\"\n                pattern=\"[^\\s]*\"\n              />\n\n              <Form.Text className=\"text-muted\">\n                Create a name for your job (DO NOT USE SPACE OR SPECIAL\n                CHARACTERS)\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"emailAddress\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                value={emailAddr}\n                className={`${errorEmail ? \"borderColor\" : \"borderRemove\"}`}\n                onChange={handleEmailAddr}\n                type=\"email\"\n                placeholder=\"username@uh.edu\"\n                id=\"emailAddress\"\n              />\n              <Form.Text className=\"text-muted\">\n                Enter your email address(e.g cougar123@uh.edu)\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"emailNotification\">\n              <Form.Label>Email Notification</Form.Label>\n              <div className=\"email-check\" style={{ fontSize: \"11px\" }}>\n                {EmailTypes.map((type, index) => {\n                  const label = type.toLocaleLowerCase();\n                  return (\n                    <Form.Check\n                      key={index}\n                      type=\"checkbox\"\n                      className=\"email-checks\"\n                      // checked={emailNotification.includes(type)}\n                      default={1}\n                      disabled={allEmail === true}\n                      onChange={() => {\n                        if (emailNotification.includes(type)) {\n                          const emails = emailNotification.filter(\n                            (removeType) => removeType !== type\n                          );\n                          setEmailNotification(emails);\n                          return;\n                        }\n                        setEmailNotification([...emailNotification, type]);\n                      }}\n                      label={`On Job ${\n                        label.charAt(0).toUpperCase() + label.slice(1)\n                      }`}\n                    />\n                  );\n                })}\n                <Form.Check\n                  checked={allEmail}\n                  id=\"email-checks-all\"\n                  onChange={() => setAllEmail(!allEmail)}\n                  type=\"checkbox\"\n                  label=\"ALL\"\n                />\n              </div>\n              <Form.Text className=\"text-muted\">\n                Please select the type of email notifications about your job,\n                you would like to receive.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"clusterType\">\n              <Form.Label>Cluster Name</Form.Label>\n              <Select\n                className={`${\n                  errorCluster ? \"borderColorCluster\" : \"borderRemove\"\n                }`}\n                onChange={(e) => {\n                  setErrorCluster(false);\n                  setClusterType(e.value);\n                  setAdjustGPU(!adjustGPU);\n                  setGPUNumber(\"1\");\n                  {\n                    gpuText = \"\";\n                  }\n                  handleExecutableCall(\"\");\n                  setModuleValues(null);\n                  setDays(\"0\");\n                  setHour(\"4\");\n                  setMin(\"0\");\n                  setSec(\"0\");\n                  setAdjustRunTime(false);\n                  setNumberOfCore(\"1\");\n                  setNumberOfNode(\"1\");\n                  setNumberOfMemory(\"1GB\");\n                  setAdjustGPU(false);\n                  chBackcolor(\"#7e6f30\");\n                }}\n                options={cluster}\n                moduleValues={(\"\", 0)}\n                id=\"clusterType\"\n              \n          \n              />\n              <Form.Text className=\"text-muted\">\n                Select cluster of choice\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Label>Number of Nodes</Form.Label>\n              <Select\n                value={{ value: numberOfNode, label: numberOfNode }}\n                onChange={(e) => setNumberOfNode(e.value)}\n                options={optionNodes}\n                isDisabled={clusterType === \"\"}\n                id=\"numberOfNode\"\n              />\n              <Form.Text className=\"text-muted\">\n                Select the number of compute nodes your job will run on.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"numberOfCore\">\n              <Form.Label>Number of Cores Per Node</Form.Label>\n              <Select\n                value={{ value: numberOfCore, label: numberOfCore }}\n                onChange={(e) => setNumberOfCore(e.value)}\n                isDisabled={clusterType === \"\"}\n                id=\"numberOfCore\"\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return optionCoresSabine;\n                    case \"CARYA\":\n                      return optionCoresCarya;\n                    case \"OPUNTIA\":\n                      return optionCoresOpuntia;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n              />\n              <Form.Text className=\"text-muted\">\n                Select the number of processor cores per node your job will run\n                on. Total number of cores requested will be the product of the\n                number of nodes and this value.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Label>Job Runtime</Form.Label>\n              <div className=\"row-container\" style={{ width: \"700px\" }}>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: days, label: days }}\n                    onChange={(e) => {\n                      setDays(e.value);\n                    }}\n                    options={daySet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"days\"\n                    id=\"days\"\n                  />\n                  <label htmlFor=\"days\">Days</label>\n                </div>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: hour, label: hour }}\n                    onChange={(e) => {\n                      setHour(e.value);\n                    }}\n                    options={hourSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"hours\"\n                    id=\"hours\"\n                  />\n                  <label htmlFor=\"days\">hours</label>\n                </div>\n                <div className=\"row-container\">\n                  <Select\n                    value={{ value: minute, label: minute }}\n                    onChange={(e) => {\n                      setMin(e.value);\n                    }}\n                    options={minSecSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"minutes\"\n                    id=\"minutes\"\n                  />\n                  <label htmlFor=\"days\">min</label>\n                </div>\n                <div className=\"row-container\" style={{ width: \"300px\" }}>\n                  <Select\n                    value={{ value: second, label: second }}\n                    onChange={(e) => {\n                      setSec(e.value);\n                    }}\n                    options={minSecSet}\n                    isDisabled={!adjustRunTime}\n                    type=\"text\"\n                    placeholder=\"seconds\"\n                    id=\"seconds\"\n                  />\n                  <label htmlFor=\"days\">sec</label>\n                </div>\n              </div>\n              <Form.Check\n                checked={adjustRunTime}\n                onChange={() => setAdjustRunTime(!adjustRunTime)}\n                type=\"checkbox\"\n                label=\"Manually Adjust Runtime\"\n                disabled={clusterType === \"\"}\n              />\n              <Form.Text className=\"text-muted\">\n                This sets the amount of run time you are requesting to be\n                allocated for your job. The default job time is displayed. If\n                you want to adjust this manually, just click the checkbox next\n                to 'Manually Adjust Runtime' and this will allow you to adjust\n                the controls.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"numberOfMemory\">\n              <Form.Label>Memory Size for Cores</Form.Label>\n              <Select\n                value={{ value: numberOfMemory, label: numberOfMemory }}\n                onChange={(e) => setNumberOfMemory(e.value)}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return memoryOptions;\n                    case \"CARYA\":\n                      return memoryOptions2;\n                    case \"OPUNTIA\":\n                      return memoryOptions;\n                    default:\n                      return memoryOptions;\n                  }\n                })()}\n                isDisabled={clusterType === \"\"}\n              />\n              <Form.Text className=\"text-muted\">\n                This sets the amount of memory you want to allocate to each core\n                for your job. If you leave this in blank, your job will run with\n                the default memory per core.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"checkGPU\">\n              <Form.Label>GPUs per node:</Form.Label>\n              <Form.Check\n                style={{ marginBottom: \"10px\" }}\n                type=\"checkbox\"\n                checked={adjustGPU}\n                disabled={clusterType === \"\"}\n                onChange={() => {\n                  setAdjustGPU(!adjustGPU);\n                }}\n                label=\"Select for GPU\"\n              />\n              <Select\n                value={{ value: GPUNumber, label: GPUNumber }}\n                onChange={(e) => {\n                  setGPUNumber(e.value);\n                }}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return optionGPUcarya;\n                    case \"CARYA\":\n                      return optionGPUcarya;\n                    case \"OPUNTIA\":\n                      return optionGPU;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n                isDisabled={!adjustGPU}\n                placeholder=\"select GPU value\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"moduleSelect\">\n              <Form.Label>Modules</Form.Label>\n              <Select\n                className={`${\n                  errorModules ? \"borderColorModules\" : \"borderRemove\"\n                }`}\n                isMulti\n                value={moduleValues}\n                onChange={(value) => (\n                  setModuleValues(value), setErrorModules(false)\n                )}\n                options={(() => {\n                  switch (clusterType) {\n                    case \"SABINE\":\n                      return moduleListSabine;\n                    case \"CARYA\":\n                      return moduleListCarya;\n                    case \"OPUNTIA\":\n                      return moduleListOpuntia;\n                    default:\n                      return moduleListDef;\n                  }\n                })()}\n                isDisabled={clusterType === \"\"}\n                \n              />\n              <Form.Text className=\"text-muted\">\n              List of modules to load for your job, one per line{\" \"}\n              <Button variant=\"href\" className = \"btnLink\" onClick={() => setModalShow(true)}>\n               (more...)\n               </Button>\n                <MyVerticallyCenteredModal\n                   show={modalShow}\n                   onHide={() => setModalShow(false)}\n               />\n              </Form.Text>\n            </Form.Group>\n            <Form.Group\n              controlId=\"formBasicPassword\"\n              style={{ marginBottom: \"300px\" }}\n            >\n              <Form.Label>Executable Call</Form.Label>\n              <Form.Control\n                className={`${\n                  errorExecutable ? \"borderColorExecutable\" : \"borderRemove\"\n                }`}\n                value={executableCall}\n                onChange={(e) => (\n                  handleExecutableCall(e.target.value),\n                  setErrorExecutable(false)\n                )}\n                type=\"text\"\n                placeholder=\"python example.py\"\n                disabled={clusterType === \"\"}\n                id=\"executableCall\"\n              />\n              <Form.Text className=\"text-muted\">\n                Enter the program or complete command line statement you wish to\n                run for your job. If you pipe input or pass argument, include\n                those as well.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        </div>\n        <div className=\"space\"></div>\n        {/*\n\n          Script Code\n\n        */}\n        \n        <div className=\"flex2\">\n          <div id = \"scriptT\" className=\"slurm-title\" style={{ marginTop: \"10px\" }}>\n            <p>{`Cluster Name:  ${clusterType}`}</p>\n          </div>\n          <div id = \"scripter\" className=\"script-code\" style={{ marginTop: \"20px\" }}>\n            <div className=\"code\">\n              <span>#!/bin/bash</span>\n              <span>{`#SBATCH -J ${jobTitle}`}</span>\n              <span>{`#SBATCH -o ${jobTitle}.o%j`}</span>\n              <p>{`#SBATCH --mail-user=${emailAddr}`}</p>\n              <p>{renderEmailType()}</p>\n              <p>{renderCoreNode()}</p>\n              <p>{renderTime()}</p>\n              <p>{renderGPU()}</p>\n              <p>{renderMem()}</p>\n            </div>\n            <div className=\"code\">\n              {moduleValues &&\n                moduleValues.map((m, index) => (\n                  <p key={index}>{`module load ${m.value}`}</p>\n                ))}\n            </div>\n            <div className=\"code\">\n              <p>{executableCall}</p>\n            </div>\n          </div>\n          <div className=\"btn\">\n            <p>\n              <Button\n                id=\"clickBtn\"\n                onClick={() => {\n                  if (Validate()) {\n                    copyToClipboard(codeCopy);\n                  }\n                  validateEmail();\n                }}\n              >\n                Copy Script\n              </Button>\n            </p>\n          </div>\n          <div>\n            <p style={{ marginTop: \"10px\" }}>To use this script</p>\n            <div className=\"submit-script\">\n              <p>\n                1. Copy and paste this script into a new file in your job or\n                project directory on the cluster, using an editor like nano or\n                vi.\n              </p>\n              <p>2. Submit your job::</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}